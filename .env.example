# Redis 配置
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=123456
REDIS_DB=1

# zookeeper 配置
ZOOKEEPER_HOSTS=127.0.0.1:2181

# Mysql 配置
DB_HOST=172.27.54.184
DB_USER=root
DB_PASSWORD=123456
DB_NAME=test
DB_PORT=33061

# 百度云API KEY
BAIDUYUN_API_KEY=bce-v3/ALTAK-xxxx/xxxx

# JWT 配置（用于认证）
JWT_SECRET=your-strong-secret
JWT_ISS=KairoCore
JWT_AUD=KairoCoreClients
ACCESS_TOKEN_TTL_SECONDS=900
REFRESH_TOKEN_TTL_SECONDS=1209600

# API_KEY 支持（永久有效的服务访问密钥）
# 1) 直接在环境变量中提供 API_KEY（优先级更高），用于快速开发或简单部署
#    注意：生产环境请使用文件方式或安全的密钥管理系统，不要将真实密钥提交到代码仓库
KC_API_KEY=your-api-key-here

# 2) 从文件中读取 API_KEY（如果 KC_API_KEY 未设置则回退到此），适合生产环境
#    文件内容只需包含一行密钥文本，KairoAuth 将按此文件路径读取（默认 ~/.kairocore/api.key）
KC_API_KEY_FILE=/path/to/your/api.key

# 管理路由开关：是否启用 API_KEY 管理端点（生成/删除）
# - 开发环境建议开启（true），便于本地生成和测试
# - 生产环境建议关闭（false），或仅在管理员角色下访问
KC_ENABLE_API_KEY_ADMIN=false

# 应用环境标识：用于决定 API_KEY 管理路由的访问策略
# - development：本地开发模式，允许免登录访问管理端点（配合 KC_ENABLE_API_KEY_ADMIN=true）
# - production：生产模式，仅管理员角色可访问管理端点
KC_ENV=development